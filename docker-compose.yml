version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adhesive-search-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      # MongoDB Atlas connection
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_DB_NAME: ${MONGODB_DB_NAME}
      # Azure OpenAI configuration
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_DEPLOYMENT_NAME: ${AZURE_OPENAI_DEPLOYMENT_NAME}
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # JWT secrets
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    networks:
      - adhesive-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: adhesive-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - adhesive-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: adhesive-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - adhesive-network

volumes:
  redis-data:

networks:
  adhesive-network:
    driver: bridge